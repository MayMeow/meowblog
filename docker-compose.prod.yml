version: "3.7"

networks:
  frontend:
    external: true
  backend:
    internal: true

services:
  app:
    # build:
    #   context: ./
    #   dockerfile: ./docker/app/Dockerfile
    image: ghcr.io/maymeow/meowblog/meowblog:latest
    env_file: .env
    container_name: app
    restart: unless-stopped
    working_dir: /var/www/
    networks:
      - frontend
      - backend
    depends_on:
      - redis
    volumes:
      - $MEOWBLOG_DATA:/data # Change owner of this folder to www-data:www-data

  nginx:
    build:
      context: ./docker/nginx
      dockerfile: Dockerfile
    container_name: nginx
    networks:
      - backend
      - frontend
    volumes_from:
      - app
    ports:
      - "8088:80"
    restart: unless-stopped
    depends_on:
      - app
      - redis
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.cake.rule=Host(`$MEOWBLOG_DOMAIN`)"
      - "traefik.http.routers.cake.entrypoints=web,websecure"
      - "traefik.http.routers.cake.tls.certresolver=le"
      - "traefik.http.routers.cake.tls.options=mytls@file"
      - "traefik.http.services.cake.loadbalancer.server.port=80"
      - "traefik.http.routers.cake.service=cake"
      - "traefik.docker.network=frontend"

  postgres:
    image: postgres:12.4
    container_name: database
    volumes:
      - db_data:/var/lib/postgresql/data
    env_file: .env
    networks:
      - backend

  redis:
    image: "redis:alpine"
    container_name: cache
    networks:
      - backend

  # if you need graphic acces to application database
  # adminer:
  #   image: adminer
  #   networks:
  #     - frontend
  #   restart: unless-stopped
